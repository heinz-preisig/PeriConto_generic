"""
automaton definition for PeriConto
"""
UI_state = {
        "start"                         : {
                "show"  : [
                        "exit",
                        "ontology_create",
                        "ontology_load",
                        "ontology_create"],
                "except": [],
                "action": [],
                },
        # note: ontology
        "create ontology"               : {
                "show"  : ["exit",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_create"],
                "except": [],
                "action": ["createOntology",
                           "markChanged",
                           "putBrickList"],
                },
        "load ontology"                 : {
                "show"  : ["exit",
                           "tabs",
                           "brick_create",
                           "brick_list",
                           ],
                "except": [],
                "action": ["loadOntology",
                           "putBrickList",
                           ],
                },
        # note: bricks
        "new brick"                     : {
                "show"  : ["exit",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_list",
                           "brick_create",
                           "brick_remove",
                           ],
                "except": [],
                "action": ["newBrick",
                           "getBrickDataTuples",
                           "putBrickList",
                           "markChanged",
                           ],
                },
        "selected brick"                : {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_list",
                           "brick_create",
                           "brick_remove",
                           "brick_rename",
                           "brick_tree",
                           ],
                "except": [],
                "action": ["selectedBrick",
                           "getBrickDataTuples",
                           "putBrickDataTuples",
                           ],
                },
        "rename brick"                  : {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_list",
                           "brick_create",
                           "brick_remove",
                           "brick_rename",
                           # "brick_tree",
                           # "brick_add_item",
                           # "brick_add_primitive",
                           # "brick_remove_item",
                           # "brick_item_or_primitive_rename",
                           ],
                "except": [],
                "action": ["renameBrick",
                           "markChanged", ],
                },
        # note: selection in brick tree
        "Class in brick tree selected"  : {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_list",
                           "brick_create",
                           # "brick_remove",
                           "brick_tree",
                           "brick_add_item",
                           "brick_add_primitive",
                           # "brick_remove_item",
                           # "brick_item_or_primitive_rename",
                           ],
                "except": [],
                "action": ["selectedClassInBrickTree"],
                },
        "Item in brick tree selected"   : {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_list",
                           "brick_create",
                           "brick_remove",
                           "brick_rename",
                           "brick_tree",
                           "brick_add_item",
                           "brick_add_primitive",
                           "brick_remove_item",
                           "brick_item_or_primitive_rename",
                           ],
                "except": [],
                "action": ["selectedItemInBrickTree"],
                },
        "Value in brick tree selected"  : {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_list",
                           "brick_tree",
                           "brick_create",
                           "brick_remove",
                           "brick_rename",
                           "brick_remove_item",
                           "brick_item_or_primitive_rename",
                           ],
                "except": [],
                "action": ["selectedValueInBrickTree"],
                },
        "string in brick tree selected" : {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_create",
                           "brick_remove",
                           "brick_rename",
                           "brick_remove_item",
                           "brick_item_or_primitive_rename",
                           ],
                "except": [],
                "action": [],
                },
        "integer in brick tree selected": {
                "show"  : ["do_nothing",
                           # "exit",
                           # "ontology_save",
                           # "ontology_save_as",
                           # "tabs",
                           # "brick_create",
                           # "brick_remove",
                           # "brick_rename",
                           # "brick_remove_item",
                           ],
                "except": [],
                "action": [],
                },
        "decimal in brick tree selected": {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_create",
                           "brick_remove",
                           "brick_rename",
                           "brick_remove_item",
                           "brick_item_or_primitive_rename",
                           ],
                "except": [],
                "action": [],
                },
        "uri in brick tree selected"    : {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_create",
                           "brick_remove",
                           "brick_rename",
                           "brick_remove_item",
                           "brick_item_or_primitive_rename",
                           ],
                "except": [],
                "action": [],
                },
        "boolean in brick tree selected": {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_create",
                           "brick_remove",
                           "brick_rename",
                           "brick_remove_item",
                           "brick_item_or_primitive_rename",
                           ],
                "except": [],
                "action": [],
                },
        "asks for adding an item"       : {
                "show": ["exit",
                           "tree_visualise",
                         "ontology_save",
                         "ontology_save_as",
                         "tabs",
                         "brick_list",
                         "brick_tree",
                         ], "except": [],
                "action": ["getExistingItemNames",
                           "markChanged", ],
                },
        "ask for adding a primitive"    : {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_list",
                           "brick_tree",
                           ],
                "except": [],
                "action": ["getExistingItemNames",
                           "markChanged", ],
                },
        "Value rename"         : {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_list",
                           "brick_create",
                           "brick_remove",
                           "brick_rename",
                           "brick_tree",
                           ],
                "except": [],
                "action": ["renameItem",
                           "markChanged",
                           "getBrickDataTuples",
                           "putBrickDataTuples",
                           ],
                },
        "Item rename"         : {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_list",
                           "brick_create",
                           "brick_remove",
                           "brick_rename",
                           "brick_tree",
                           ],
                "except": [],
                "action": ["renameItem",
                           "markChanged",
                           "getBrickDataTuples",
                           "putBrickDataTuples",
                           ],
                },
        "remove item from brick tree"   : {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save",
                           "ontology_save_as",
                           "tabs",
                           "brick_list",
                           "brick_tree",
                           ],
                "except": [],
                "action": ["removeItemFromBrickTree",
                           "markChanged",
                           "getBrickDataTuples",
                           "putBrickDataTuples",
                           ],
                },
        "changed"                       : {
                "show"  : ["exit",
                           "tree_visualise",
                           "ontology_save", ],
                "except": [],
                "action": [],
                },
        "do nothing"                    : {
                "show"  : [],
                "except": [],
                "action": [],
                },
        "save"                          : {
                "show"  : ["do_nothing"],
                "action": ["saveBricks"],
                },
        "visualise"                     : {
                "show"  : ["do_nothing"],
                "action": ["visualise"],
                },
        }

# keys = sorted(UI_state.keys())
# print("automaton keys")
# for k in keys:
#   print(k)
# print("============================\n")
# pass
